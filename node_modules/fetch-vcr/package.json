{
  "_args": [
    [
      {
        "raw": "fetch-vcr@^0.5.1",
        "scope": null,
        "escapedName": "fetch-vcr",
        "name": "fetch-vcr",
        "rawSpec": "^0.5.1",
        "spec": ">=0.5.1 <0.6.0",
        "type": "range"
      },
      "/Users/mobitar/Desktop/github-push/node_modules/octokat"
    ]
  ],
  "_from": "fetch-vcr@>=0.5.1 <0.6.0",
  "_id": "fetch-vcr@0.5.5",
  "_inCache": true,
  "_location": "/fetch-vcr",
  "_nodeVersion": "6.9.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/fetch-vcr-0.5.5.tgz_1494863768776_0.9624873420689255"
  },
  "_npmUser": {
    "name": "philschatz",
    "email": "phil@cnx.org"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "fetch-vcr@^0.5.1",
    "scope": null,
    "escapedName": "fetch-vcr",
    "name": "fetch-vcr",
    "rawSpec": "^0.5.1",
    "spec": ">=0.5.1 <0.6.0",
    "type": "range"
  },
  "_requiredBy": [
    "/octokat"
  ],
  "_resolved": "https://registry.npmjs.org/fetch-vcr/-/fetch-vcr-0.5.5.tgz",
  "_shasum": "a404e4c62116800fdcb40c509331b7a99a2f819e",
  "_shrinkwrap": null,
  "_spec": "fetch-vcr@^0.5.1",
  "_where": "/Users/mobitar/Desktop/github-push/node_modules/octokat",
  "author": {
    "name": "Philip Schatz"
  },
  "browser": {
    "./lib/adapter/fetch-node.js": "./lib/adapter/fetch-browser.js",
    "./lib/adapter/files-node.js": "./lib/adapter/files-browser.js",
    "./lib/adapter/response-node.js": "./lib/adapter/response-browser.js"
  },
  "bugs": {
    "url": "https://github.com/philschatz/fetch-vcr/issues"
  },
  "dependencies": {
    "jsdom": "^10.1.0",
    "node-fetch": "^1.6.3",
    "whatwg-fetch": "^2.0.3"
  },
  "description": "Stop mocking HTTP Requests. Just record and then play them back",
  "devDependencies": {
    "ava": "^0.19.1",
    "rollup": "^0.41.6",
    "rollup-plugin-commonjs": "^8.0.2",
    "rollup-plugin-node-resolve": "^3.0.0",
    "standard": "^10.0.2"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "a404e4c62116800fdcb40c509331b7a99a2f819e",
    "tarball": "https://registry.npmjs.org/fetch-vcr/-/fetch-vcr-0.5.5.tgz"
  },
  "gitHead": "e0f0a744041343e35dd3c05cdacd41c4e1d24433",
  "homepage": "https://github.com/philschatz/fetch-vcr#readme",
  "keywords": [
    "fetch",
    "fixture",
    "cassette",
    "vcr"
  ],
  "license": "MIT",
  "main": "./lib/index.js",
  "maintainers": [
    {
      "name": "philschatz",
      "email": "phil@cnx.org"
    }
  ],
  "name": "fetch-vcr",
  "optionalDependencies": {},
  "readme": "# fetch-vcr\n\n[![gh-board][kanban-image]][kanban-url]\n[![NPM version][npm-image]][npm-url]\n[![Downloads][downloads-image]][downloads-url]\n[![build status][travis-image]][travis-url]\n[![dependency status][dependency-image]][dependency-url]\n[![dev dependency status][dev-dependency-image]][dev-dependency-url]\n\nStop mocking HTTP Requests. Just record and then play them back. See [vcr/vcr](https://github.com/vcr/vcr) for the main idea.\n\n# Usage\n\nThe basics are:\n\n1. turn on `cache` mode\n2. run your tests\n\nThis will record (and load) all the HTTP responses into the `./_fixtures/` directory.\n\nAnd when you run the steps again, no network traffic happens.\n\n# How do I set this up?\n\n```js\n// import fetch from 'fetch';\nimport fetch from 'fetch-vcr';\n\n// Configure what mode this VCR is in (playback, recording, cache)\n// and where the recordings should be loaded/saved to.\nfetch.configure({\n  mode: 'record',\n  fixturePath: __dirname + '/_fixtures'\n})\n\nfetch('http://openstax.org')\n.then(response => {\n  response.text()\n  .then(text => {\n    console.log(text)\n  })\n})\n```\n\n\n# What are the different modes?\n\n- `playback`: (default) **only** uses the local fixture files\n- `cache`: tries to use the fixture and if not found then it is fetched and then saved (useful when adding new tests)\n- `record`: forces files to be written (useful for regenerating all the fixtures)\n- `erase`: deletes the fixture corresponding to the request\n\n\n# How can I set the VCR mode?\n\nYou can set the mode either by:\n\n- setting the `VCR_MODE=record` environment variable\n- explicitly running `fetch.configure({mode: 'record'})`\n\n\n# How can I use this in a browser?\n\nCurrently you can record HTTP requests in NodeJS and play them back in the browser.\n\nTo play them back in a browser, just run `fetchVCR.configure({fixturePath: './path/to/_fixtures'})` and `fetchVCR` will use that path to load the files via AJAX requests.\n\nTo record HTTP requests in a browser you will need to do a little bit of work. Loading fixture files is relatively painless (using `XMLHTTPRequest`) but saving them to disk is non-trivial.\n\nIn order to save the fixture files to disk you will need to override `fetchVCR.saveFile(rootPath, filename, contents) => Promise`.\n\nIf you are using PhantomJS then you will likely need to use the `alert(msg)` to get data out of PhantomJS and then save it to the filesystem (using `fs.writeFile(...)`)\n\n## Using jsdom (like Jest)\n\nJest runs using jsdom which makes it really easy to add fetchVCR. Basically, just replace the global `fetch` function with `fetchVCR` and you can record/play back the cassettes. See below for an example:\n\n```js\nvar fs = require('fs')\nvar jsdom = require('jsdom')\nvar fetchVCR = require('fetch-vcr')\nvar JSDOM = jsdom.JSDOM\n\n// Configure the fetchVCR to record\nfetchVCR.configure({\n  fixturePath: './_fixtures/',\n  mode: 'cache'\n})\n\nvar dom = new JSDOM(fs.readFileSync('./jsdom-example.html'), {\n  runScripts: 'dangerously',\n  beforeParse: (window) => {\n    window.fetch = fetchVCR\n  }\n})\n```\n\n\n\n[kanban-image]: https://img.shields.io/github/issues/philschatz/fetch-vcr.svg?label=kanban%20board%20%28gh-board%29\n[kanban-url]: http://philschatz.com/gh-board/#/r/philschatz:fetch-vcr\n[npm-image]: https://img.shields.io/npm/v/fetch-vcr.svg\n[npm-url]: https://npmjs.org/package/fetch-vcr\n[downloads-image]: http://img.shields.io/npm/dm/fetch-vcr.svg\n[downloads-url]: https://npmjs.org/package/fetch-vcr\n[travis-image]: https://img.shields.io/travis/philschatz/fetch-vcr.svg\n[travis-url]: https://travis-ci.org/philschatz/fetch-vcr\n[dependency-image]: https://img.shields.io/david/philschatz/fetch-vcr.svg\n[dependency-url]: https://david-dm.org/philschatz/fetch-vcr\n[dev-dependency-image]: https://img.shields.io/david/dev/philschatz/fetch-vcr.svg\n[dev-dependency-url]: https://david-dm.org/philschatz/fetch-vcr#info=devDependencies\n[coverage-image]: https://img.shields.io/codecov/c/github/philschatz/fetch-vcr.svg\n[coverage-url]: https://codecov.io/gh/philschatz/fetch-vcr\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/philschatz/fetch-vcr.git"
  },
  "scripts": {
    "build-browser": "rollup --config rollup.config.js",
    "debug": "DEBUG=true node --inspect --debug-brk ./node_modules/ava/profile.js ./test/index.js",
    "pretest": "./script/clean-for-test",
    "test": "ava"
  },
  "version": "0.5.5"
}
