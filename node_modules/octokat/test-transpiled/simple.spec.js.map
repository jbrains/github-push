{"version":3,"sources":["../test/simple.spec.js"],"names":["require","assert","expect","Octokat","client","USERNAME","ORG_NAME","REPO_USER","REPO_NAME","OTHER_USERNAME","LONG_TIMEOUT","btoa","window","global","base64encode","str","buffer","toString","Error","trapFail","promise","onError","err","console","error","JSON","stringify","catch","then","GH","REPO","USER","ME","ORG","GIST","ISSUE","STATE","describe","timeout","stringifyAry","args","Array","isArray","length","arr","map","arg","join","itIs","obj","msg","cb","code","isFuncArgs","forEach","constructMethod","context","finalArgs","isLast","names","split","field","it","val","fail","itIsOk","to","be","ok","itIsArray","an","array","itIsFalse","false","itIsBoolean","true","before","fromUrl","fetch","not","null","done","json","url","foo_url","bar","baz_url","parse","ret","equal","foo","baz","issues","s","q","gists","public","nextPage","items","have","at","least","prevPage","firstPage","lastPage","results","moreResults","repos","repo","htmlUrl","a","title","git","refs","tags","gt","tag","pullRef","blobs","create","content","encoding","sha","read","v","readBinary","string","collaborators","contains","add","remove","users","avatarUrl","orgs","me","starred","isStarred","config","description","files","gist","star","state","body","retreivedFromCache","cacheHandler","_cachedETags","method","path","eTag","data","status","client2","repo2","repo1"],"mappings":"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","file":"simple.spec.js","sourceRoot":"./index.js","sourcesContent":["/* eslint-env mocha */\nconst { assert, expect } = require('chai')\nconst { Octokat, client, USERNAME, ORG_NAME, REPO_USER, REPO_NAME, OTHER_USERNAME, LONG_TIMEOUT } = require('./test-config')\n\n// NodeJS does not have a btoa\nlet btoa = null\n\nif (typeof window !== 'undefined' && window !== null) {\n  btoa = window.btoa\n  // Use the `Buffer` if available (NodeJS)\n} else if (typeof global !== 'undefined' && global !== null) {\n  btoa = function base64encode (str) {\n    var buffer = new global['Buffer'](str, 'binary')\n    return buffer.toString('base64')\n  }\n} else {\n  throw new Error('Native btoa function or Buffer is missing')\n}\n\nlet trapFail = function (promise) {\n  let onError = function (err) {\n    console.error(JSON.stringify(err))\n    return assert.catch(err)\n  }\n  // Depending on the Promise implementation the fail method could be:\n  // - `.catch` (native Promise)\n  // - `.fail` (jQuery or angularjs)\n  promise.then(null, onError)\n  return promise\n}\n\nconst GH = 'octo'\nconst REPO = 'myRepo'\nconst USER = 'someUser'\nconst ME = 'myUser'\n// const BRANCH = 'BRANCH'\n// let ANOTHER_USER = 'ANOTHER_USER'\nconst ORG = 'someOrg'\nconst GIST = 'someGist'\nconst ISSUE = 'someIssue'\n// const COMMENT = 'someComment'\n\nconst STATE = {}\n\ndescribe(`${GH} = new Octokat({token: ...})`, function () {\n  this.timeout(LONG_TIMEOUT)\n\n  let stringifyAry = function (args) {\n    if (!Array.isArray(args)) { args = [args] }\n    if (!args.length) { return '' }\n    let arr = (args.map((arg) => JSON.stringify(arg)))\n    return arr.join(', ')\n  }\n\n  let itIs = function (obj, msg, args, cb) {\n    let code = ''\n    let isFuncArgs = false\n    args.forEach((arg) => {\n      if (isFuncArgs) {\n        code += `(${stringifyAry(arg)})`\n      } else {\n        code += `.${arg}`\n      }\n\n      isFuncArgs = !isFuncArgs\n    })\n\n    if (isFuncArgs) { code += '()' }\n\n    let constructMethod = function () {\n      // Construct the method call\n      let context = STATE[obj]\n      isFuncArgs = false // Every other arg is a function arg\n      let finalArgs = []\n      args.forEach((arg) => {\n        let isLast = arg === args[args.length - 1]\n        if (isFuncArgs) {\n          if (!Array.isArray(arg)) { arg = [arg] }\n          if (isLast) {\n            finalArgs = arg\n          } else {\n            context = context(...arg)\n          }\n        } else {\n          let names = arg.split('.')\n          names.forEach((field) => {\n            context = context[field]\n          })\n        }\n\n        isFuncArgs = !isFuncArgs\n      })\n\n      return {finalArgs, context}\n    }\n\n    it(`${obj}${code}`, function () {\n      let {finalArgs, context} = constructMethod()\n      // If the last arg was something like 'fetch' then\n      if (isFuncArgs) {\n        context().then(cb)\n      } else {\n        context(...finalArgs).then(cb)\n      }\n    })\n\n    it(`${obj}${code} (callback ver)`, function () {\n      let {finalArgs, context} = constructMethod()\n      context(...finalArgs, function (err, val) {\n        if (err) { return assert.fail(err) }\n        cb(val)\n      })\n    })\n  }\n\n  let itIsOk = (obj, ...args) => itIs(obj, '', args, val => expect(val).to.be.ok)\n\n  let itIsArray = (obj, ...args) =>\n    itIs(obj, ' yields Array', args, val => expect(val).to.be.an.array)\n\n  let itIsFalse = (obj, ...args) =>\n    itIs(obj, ' yields False', args, val => expect(val).to.be.false)\n\n  let itIsBoolean = (obj, ...args) => itIs(obj, '', args, val => expect(val === true || val === false).to.be.true)\n\n  before(() => { STATE[GH] = client })\n\n  describe('Synchronous methods', function () {\n    it(`supports octo.fromUrl('https://api.github.com/repos/${REPO_USER}/${REPO_NAME}')`, () =>\n      client.fromUrl(`https://api.github.com/repos/${REPO_USER}/${REPO_NAME}`)\n      .fetch().then(val => expect(val).to.not.be.null)\n    )\n\n    it(`supports octo.fromUrl('/repos/${REPO_USER}/${REPO_NAME}')`, () =>\n      client.fromUrl(`/repos/${REPO_USER}/${REPO_NAME}`)\n      .fetch().then(val => expect(val).to.not.be.null)\n    )\n  })\n\n  it('supports octo.parse(json)', function (done) {\n    let json = {\n      url: 'https://api.github.com/repos/philschatz/octokat.js',\n      foo_url: 'http://philschatz.com',\n      field: 'Hello there!',\n      bar: {\n        baz_url: 'http://philschatz.com'\n      }\n    }\n    client.parse(json, function (err, ret) {\n      expect(err).to.be.null\n      expect(ret.field).to.equal(json.field)\n      expect(ret.url).to.equal(json.url)\n      expect(ret.foo.url).to.equal(json.foo_url)\n      // Make sure the parse recurses\n      expect(ret.bar.baz.url).to.equal(json.bar.baz_url)\n      // Make sure the obj was detected to be a repo\n      expect(ret.fetch).to.not.be.null\n      expect(ret.issues).to.not.be.null\n      done()\n    })\n  })\n\n  describe('Miscellaneous APIs', function () {\n    itIsOk(GH, 'zen.read')\n    itIsOk(GH, 'octocat.read')\n    itIsOk(GH, 'octocat.read', {s: 'There is no need to be upset'})\n    itIsOk(GH, 'emojis.fetch')\n    itIsOk(GH, 'gitignore.templates.fetch')\n    itIsOk(GH, 'gitignore.templates', 'C', 'read')\n    // itIsOk(GH, 'markdown.create', [{text:'# Hello There'}, true])\n    itIsOk(GH, 'meta.fetch')\n    itIsOk(GH, 'rateLimit.fetch')\n    itIsOk(GH, 'feeds.fetch')\n  })\n\n  itIsArray(GH, 'users.fetch')\n  itIsArray(GH, 'gists.public.fetch')\n  // itIsArray(GH, 'global.events')\n  // itIsArray(GH, 'global.notifications')\n\n  itIsArray(GH, 'search.repositories.fetch', {q: 'octokat'}) // {q: 'github'}\n  // itIsArray(GH, 'search.code.fetch', {q:'github'})\n  itIsArray(GH, 'search.issues.fetch', {q: 'octokat'})\n  itIsArray(GH, 'search.users.fetch', {q: 'octokat'})\n\n  itIsOk(GH, 'users', REPO_USER, 'fetch')\n  itIsOk(GH, 'orgs', ORG_NAME, 'fetch')\n  itIsOk(GH, 'repos', [REPO_USER, REPO_NAME], 'fetch')\n  itIsArray(GH, 'issues.fetch')\n\n  describe('Paged Results', function () {\n    describe('Deprecated Notation', function () {\n      it(`${GH}.gists.public.fetch().then(results) -> results.nextPage()`, () =>\n        trapFail(STATE[GH].gists.public.fetch())\n        .then(({nextPage}) =>\n          nextPage()\n          .then(function ({items}) {\n            expect(items).to.be.an('array')\n            return expect(items).to.have.length.at.least(1)\n          })\n        )\n      )\n\n      it(`${GH}.gists.public.fetch().then(results) -> results.prevPage()`, () =>\n        trapFail(STATE[GH].gists.public.fetch())\n        .then(({nextPage}) =>\n          nextPage()\n          .then(({prevPage}) =>\n            prevPage()\n            .then(function () {})\n          )\n        )\n      )\n\n      it(`${GH}.gists.public.fetch().then(results) -> results.firstPage()`, () =>\n        trapFail(STATE[GH].gists.public.fetch())\n        .then(({nextPage}) =>\n          nextPage()\n          .then(({firstPage}) =>\n            firstPage()\n            .then(function () {})\n          )\n        )\n      )\n\n      it(`${GH}.gists.public.fetch().then(results) -> results.lastPage()`, () =>\n        trapFail(STATE[GH].gists.public.fetch())\n        .then(({lastPage}) => lastPage())\n      )\n    })\n\n    describe('New Notation', function () {\n      it(`${GH}.gists.public.fetch().then(results) -> results.nextPage.fetch()`, () =>\n        trapFail(STATE[GH].gists.public.fetch())\n        .then(({nextPage}) =>\n          nextPage.fetch()\n          .then(function ({items}) {\n            expect(items).to.be.an('array')\n            return expect(items).to.have.length.at.least(1)\n          })\n        )\n      )\n\n      it(`${GH}.gists.public.fetch().then(results) -> results.prevPage.fetch()`, () =>\n        trapFail(STATE[GH].gists.public.fetch())\n        .then(({nextPage}) =>\n          nextPage.fetch()\n          .then(({prevPage}) =>\n            prevPage.fetch()\n            .then(function () {})\n          )\n        )\n      )\n\n      it(`${GH}.gists.public.fetch().then(results) -> results.firstPage.fetch()`, () =>\n        trapFail(STATE[GH].gists.public.fetch())\n        .then(results =>\n          results.nextPage.fetch()\n          .then(moreResults =>\n            moreResults.firstPage.fetch()\n            .then(function () {})\n          )\n        )\n      )\n\n      it(`${GH}.gists.public.fetch().then(results) -> results.lastPage.fetch()`, () =>\n        trapFail(STATE[GH].gists.public.fetch())\n        .then(results => results.lastPage.fetch())\n      )\n    })\n  })\n\n  describe(`${REPO} = ${GH}.repos(OWNER, NAME)`, function () {\n    before(() => { STATE[REPO] = STATE[GH].repos(REPO_USER, REPO_NAME) })\n\n    itIsOk(REPO, 'fetch')\n\n    // Accessors for methods generated from URL patterns\n    itIsArray(REPO, 'collaborators.fetch')\n    itIsOk(REPO, 'readme.read')\n    itIsArray(REPO, 'hooks.fetch')\n    itIsArray(REPO, 'assignees.fetch')\n    itIsArray(REPO, 'languages.fetch')\n    itIsArray(REPO, 'teams.fetch')\n    itIsArray(REPO, 'tags.fetch')\n    itIsArray(REPO, 'branches.fetch')\n    itIsArray(REPO, 'contributors.fetch')\n    itIsArray(REPO, 'subscribers.fetch')\n    itIsArray(REPO, 'subscription.fetch')\n    itIsArray(REPO, 'comments.fetch')\n    itIsArray(REPO, 'downloads.fetch')\n    itIsArray(REPO, 'milestones.fetch')\n    itIsArray(REPO, 'labels.fetch')\n    itIsArray(REPO, 'stargazers.fetch')\n    itIsArray(REPO, 'forks.fetch')\n\n    itIsArray(REPO, 'releases.fetchAll')\n    itIsArray(REPO, 'issues.fetchAll')\n\n    it(`camelCases URL fields that are not templated (ie ${REPO}.htmlUrl)`, () =>\n      STATE[REPO].fetch().then(repo => expect(repo.htmlUrl).to.be.a('string'))\n    )\n\n    describe(`${REPO}.issues...`, function () {\n      itIsArray(REPO, 'issues.fetch')\n      itIsArray(REPO, 'issues.events.fetch')\n      itIsArray(REPO, 'issues.comments.fetch')\n      // itIsArray(REPO, 'issues.comments', commentId, 'fetch')\n\n      itIsOk(REPO, 'issues.create', {title: 'Test Issue'})\n      itIsOk(REPO, 'issues', 1, 'fetch')\n    })\n\n    // itIsOk(REPO, 'pages.fetch')\n    // itIsOk(REPO, 'pages.builds.fetch')\n    // itIsOk(REPO, 'pages.builds.latest.fetch')\n\n    describe(`${REPO}.stats...`, function () {\n      itIsOk(REPO, 'stats.contributors.fetch')\n      itIsOk(REPO, 'stats.commitActivity.fetch')\n      // itIsOk(REPO, 'stats.codeFrequency.fetch') Commented because it seems to always return 403\n      itIsOk(REPO, 'stats.participation.fetch')\n      itIsOk(REPO, 'stats.punchCard.fetch')\n    })\n\n    describe(`${REPO}.git... (Git Data)`, function () {\n      itIsArray(REPO, 'git.refs.fetch')\n      // itIsArray(REPO, 'git.refs.tags.fetch')    This repo does not have any tags: TODO: create a tag\n      itIsArray(REPO, 'git.refs.heads.fetch')\n\n      // itIsOk(REPO, 'git.tags.create', {tag:'test-tag', message:'Test tag for units', ...})\n      // itIsOk(REPO, 'git.tags.one', 'test-tag')\n      itIsOk(REPO, 'git.trees', '8a916cc3af923653680ce59592f88b31a6a5afba', 'fetch')\n      // itIsOk(REPO, 'git.trees.create', {tree: [sha], base_tree: sha})\n\n      it('.git.refs.tags.fetch()', () =>\n        STATE[GH].repos('philschatz', 'octokat.js').git.refs.tags.fetch().then(function ({items}) {\n          expect(items).to.be.a('array')\n          return expect(items.length).to.be.gt(17)\n        })\n      )\n\n      it('.git.refs.tags(\"v0.1.1\").fetch()', () =>\n        STATE[GH].repos('philschatz', 'octokat.js').git.refs.tags('v0.1.1').fetch().then(tag => expect(tag).to.be.a('object'))\n      )\n\n      it('.git.refs(\"any/path\").fetch() like pull/2/head refs on github', () =>\n        STATE[GH].repos('philschatz', 'octokat.js').git.refs('pull/2/head').fetch().then(pullRef => expect(pullRef).to.be.a('object'))\n      )\n\n      it('.git.blobs.create(\"Hello\")   and .blobs(sha).read()', () =>\n        STATE[REPO].git.blobs.create({content: 'Hello', encoding: 'utf-8'})\n        .then(function ({sha}) {\n          expect(sha).to.be.ok\n          return STATE[REPO].git.blobs(sha).read()\n          .then(v => expect(v).to.equal('Hello'))\n        })\n      )\n\n      it('.git.blobs.create(...) and .blobs(...).readBinary()', () => {\n        return STATE[REPO].git.blobs.create({content: btoa('Hello'), encoding: 'base64'})\n        .then(function ({sha}) {\n          expect(sha).to.be.ok\n          return STATE[REPO].git.blobs(sha).readBinary()\n          .then(v => expect(v).to.have.string('Hello'))\n        })\n      })\n    })\n\n    // Make sure the library does not just ignore the isBase64 flag\n    // TODO: This is commented because caching is only based on the path, not the flags (or the verb)\n    // STATE[REPO].git.blobs.one(sha)\n    // .then (v) ->\n    //   expect(v).to.not.have.string('Hello')\n\n    describe('Collaborator changes', function () {\n      it('gets a list of collaborators', () =>\n        trapFail(STATE[REPO].collaborators.fetch())\n        .then(v => expect(v).to.be.an.array)\n      )\n\n      it('tests membership', () =>\n        trapFail(STATE[REPO].collaborators.contains('random-user-name'))\n        .then(v => expect(v).to.be.false)\n      )\n\n      it('adds and removes a collaborator', () =>\n        trapFail(STATE[REPO].collaborators(OTHER_USERNAME).add())\n        .then(function (v) {\n          expect(v).to.be.ok\n          return trapFail(STATE[REPO].collaborators(OTHER_USERNAME).remove())\n          .then(v => expect(v).to.be.true)\n        })\n      )\n    })\n  })\n\n  describe(`${USER} = ${GH}.users(USERNAME)`, function () {\n    before(() => { STATE[USER] = STATE[GH].users(USERNAME) })\n\n    itIsOk(USER, 'fetch')\n    itIsArray(USER, 'repos.fetch')\n    itIsArray(USER, 'orgs.fetch')\n    itIsArray(USER, 'gists.fetch')\n    itIsArray(USER, 'followers.fetch')\n    itIsArray(USER, 'following.fetch')\n    itIsFalse(USER, 'following.contains', 'defunkt')\n    itIsArray(USER, 'keys.fetch')\n    itIsArray(USER, 'events.fetch')\n    itIsArray(USER, 'receivedEvents.fetch')\n    itIsArray(USER, 'starred.fetch')\n\n    it(`camelCases URL fields that are not templated (ie ${USER}.avatarUrl)`, () =>\n      STATE[USER].fetch().then(function (repo) {\n        expect(repo.htmlUrl).to.be.a('string')\n        return expect(repo.avatarUrl).to.be.a('string')\n      })\n    )\n  })\n\n  describe(`${ORG} = ${GH}.orgs(ORG_NAME)`, function () {\n    before(() => { STATE[ORG] = STATE[GH].orgs(ORG_NAME) })\n\n    itIsArray(ORG, 'fetch')\n    itIsArray(ORG, 'members.fetch')\n    itIsArray(ORG, 'repos.fetch')\n    return itIsArray(ORG, 'issues.fetch')\n  })\n\n  describe(`${ME} = ${GH}.me (the authenticated user)`, function () {\n    before(() => { STATE[ME] = STATE[GH].me })\n\n    // itIsOk(ME, 'fetch')\n\n    itIsArray(ME, 'repos.fetch')\n    itIsArray(ME, 'orgs.fetch')\n    itIsArray(ME, 'followers.fetch')\n    itIsArray(ME, 'following.fetch')\n    itIsFalse(ME, 'following.contains', 'defunkt')\n    itIsArray(ME, 'emails.fetch')\n    itIsFalse(ME, 'emails.contains', 'invalid@email.com')\n    // itIsArray(ME, 'keys.all')\n    // itIsFalse(ME, 'keys.is', 'invalid-key')\n\n    itIsArray(ME, 'issues.fetch')\n\n    itIsArray(ME, 'starred.fetch')\n    itIsBoolean(ME, 'starred.contains', 'philschatz/octokat.js')\n\n    describe('Multistep operations', () =>\n\n      it('.starred.add(OWNER, REPO), .starred.is(...), and then .starred.remove(...)', () =>\n        trapFail(STATE[ME].starred(REPO_USER, REPO_NAME).add())\n        .then(() =>\n          STATE[ME].starred.contains(REPO_USER, REPO_NAME)\n          .then(function (isStarred) {\n            expect(isStarred).to.be.true\n            return STATE[ME].starred(REPO_USER, REPO_NAME).remove()\n            .then(v => expect(v).to.be.true)\n          })\n        )\n      )\n    )\n  })\n\n  describe(`${GIST} = ${GH}.gist(GIST_ID)`, function () {\n    before(function () {\n      // Create a Test Gist for all the tests\n      let config = {\n        description: 'Test Gist',\n        'public': false,\n        files: {\n          'hello.txt': {\n            content: 'Hello World'\n          }\n        }\n      }\n\n      return STATE[GH].gists.create(config)\n      .then(gist => { STATE[GIST] = gist })\n    })\n\n    // itIsOk(GIST, 'fetch')\n\n    // itIsArray(GIST, 'forks.all')\n\n    // TODO: For some reason this test fails in the browser. Probably POST vs PUT?\n    it('can be .starred.add() and .starred.remove()', () =>\n      STATE[GIST].star.add()\n      .then(() => STATE[GIST].star.remove())\n    )\n  })\n\n  describe(`${ISSUE} = ${REPO}.issues(1)`, function () {\n    before(() => { STATE[ISSUE] = STATE[REPO].issues(1) })\n\n    itIsOk(ISSUE, 'fetch')\n    itIsOk(ISSUE, 'update', {title: 'New Title', state: 'closed'})\n\n    describe('Comment methods (Some are on the repo, issue, or comment)', function () {\n      itIsArray(ISSUE, 'comments.fetch')\n      itIsOk(ISSUE, 'comments.create', {body: 'Test comment'})\n      // NOTE: Comment updating is awkward because it's on the repo, not a specific issue.\n      // itIsOk(REPO, 'issues.comments.update', 302601077, {body: 'Test comment updated'})\n      return itIsOk(REPO, 'issues.comments', 302601077, 'fetch')\n    })\n  })\n})\n\n      // Deprecated. Now provides only `issueUrl`\n      // it 'comment.issue()', ->\n      //   trapFail STATE[REPO].issues.comments(302601077).fetch()\n      //   .then (comment) ->\n      //     comment.issue()\n\n// TODO: Refactor: put this back in once the constructor allows setting plugins\n// describe 'Allows disabling hypermedia conversion', () ->\n//   it 'returns a simple JSON object when fetching a repository', ->\n//     client = new Octokat({token: TOKEN, disableHypermedia: true})\n//     client.repos(REPO_USER, REPO_NAME).fetch()\n//     .then (repo) ->\n//       expect(repo.full_name).to.not.be.null\n//       expect(repo.html_url).to.not.be.null\n//       expect(repo.created_at).to.be.a('string')\n//       # Serializing the object as JSON should work\n//       JSON.stringify(repo)\n\ndescribe('Cache Handler', () =>\n  it('is called when refetching a URL', function () {\n    let retreivedFromCache = false\n    let cacheHandler = new class CacheHandler {\n      constructor () {\n        this._cachedETags = {}\n      }\n      get (method, path) {\n        retreivedFromCache = !!this._cachedETags[`${method} ${path}`]\n        return this._cachedETags[`${method} ${path}`]\n      }\n      add (method, path, eTag, data, status) {\n        this._cachedETags[`${method} ${path}`] = {eTag, data, status}\n      }\n    }()\n\n    const client2 = new Octokat({cacheHandler})\n    return client2.repos(REPO_USER, REPO_NAME).fetch()\n    .then(repo1 =>\n      client2.repos(REPO_USER, REPO_NAME).fetch()\n      .then(function (repo2) {\n        expect(JSON.stringify(repo1)).to.equal(JSON.stringify(repo2))\n        expect(retreivedFromCache).to.be.true\n        return 'doneee'\n      })\n    )\n  })\n)\n"]}